/**
 * @license
 * Copyright (c) 2014, 2019, Oracle and/or its affiliates.
 * The Universal Permissive License (UPL), Version 1.0
 */
define(["ojs/ojcore","knockout","ojs/ojlogger","ojs/ojcontext","ojs/ojkoshared"],function(n,e,o,t,r){"use strict";!function(){r.registerPreprocessor("oj-bind-dom",function(e){var o,t="ko _ojBindDom_:",r=function(e){if(null!=e){var o=n.__AttributeUtils.getExpressionInfo(e).expr;return null==o&&(o="'"+e+"'"),o}return null}(e.getAttribute("config"));r&&(t+=r);var i=document.createComment(t),d=document.createComment("/ko");o=[i];var s=e.parentNode;for(s.insertBefore(i,e);e.childNodes.length>0;){var l=e.childNodes[0];s.insertBefore(l,e),o.push(l)}return o.push(d),s.replaceChild(d,e),o})}(),e.bindingHandlers._ojBindDom_={init:function(r,i,d,s,l){var u,a,c;function f(i){a||(a=t.getContext(r.parentNode).getBusyContext().addBusyState({description:"oj-bind-dom is waiting on config Promise resolution"})),function(){if(!c){for(var e=r.parentNode;e&&!n.ElementUtils.isValidCustomElementName(e.localName);)e=e.parentNode;var o=r.parentNode===e;c=n._KnockoutBindingProvider.getInstance().__RegisterBindingAppliedPromiseForChildren(e,o)}}(),i.then(function(n){if(i===u)try{e.virtualElements.setDomNodeChildren(r,n.view||[]);var t=l.createChildContext(n.data,void 0,function(n){n.$parent=null,n.$parentContext=null,n.$parents=null});e.applyBindingsToDescendants(t,r)}catch(n){o.error("An error %o occurred during view insertion and apply bindings for oj-bind-dom.",n)}finally{p(),m()}},function(n){p(),m(),o.error("An error %o occurred during view insertion and apply bindings for oj-bind-dom.",n)})}function m(){c&&(c(),c=null)}function p(){a&&(a(),a=null)}return e.computed(function(){f(u=Promise.resolve(e.utils.unwrapObservable(i())))},null,{disposeWhenNodeIsRemoved:r}),{controlsDescendantBindings:!0}}},e.virtualElements.allowedBindings._ojBindDom_=!0});